var cov_1p4x9m6xt1=function(){var path="/home/marta/bootcamp/collab/skylab-bootcamp-201909/staff/marta-penya/wishare/wishare-api/logic/delete-wish/index.js";var hash="964619c9f768b64a32328925ebf788bb9799cab2";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/marta/bootcamp/collab/skylab-bootcamp-201909/staff/marta-penya/wishare/wishare-api/logic/delete-wish/index.js",statementMap:{"0":{start:{line:1,column:48},end:{line:1,column:71}},"1":{start:{line:2,column:39},end:{line:2,column:62}},"2":{start:{line:3,column:11},end:{line:3,column:24}},"3":{start:{line:4,column:13},end:{line:4,column:28}},"4":{start:{line:16,column:0},end:{line:42,column:1}},"5":{start:{line:17,column:4},end:{line:17,column:23}},"6":{start:{line:18,column:4},end:{line:18,column:37}},"7":{start:{line:19,column:4},end:{line:19,column:86}},"8":{start:{line:19,column:31},end:{line:19,column:86}},"9":{start:{line:21,column:4},end:{line:21,column:27}},"10":{start:{line:22,column:4},end:{line:22,column:45}},"11":{start:{line:23,column:4},end:{line:23,column:94}},"12":{start:{line:23,column:35},end:{line:23,column:94}},"13":{start:{line:25,column:4},end:{line:41,column:8}},"14":{start:{line:26,column:21},end:{line:26,column:44}},"15":{start:{line:28,column:8},end:{line:28,column:74}},"16":{start:{line:28,column:19},end:{line:28,column:74}},"17":{start:{line:30,column:21},end:{line:30,column:65}},"18":{start:{line:30,column:46},end:{line:30,column:64}},"19":{start:{line:31,column:8},end:{line:31,column:87}},"20":{start:{line:31,column:19},end:{line:31,column:87}},"21":{start:{line:36,column:8},end:{line:39,column:11}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:16,column:17},end:{line:16,column:18}},loc:{start:{line:16,column:39},end:{line:42,column:1}},line:16},"1":{name:"(anonymous_1)",decl:{start:{line:25,column:12},end:{line:25,column:13}},loc:{start:{line:25,column:24},end:{line:41,column:5}},line:25},"2":{name:"(anonymous_2)",decl:{start:{line:30,column:38},end:{line:30,column:39}},loc:{start:{line:30,column:46},end:{line:30,column:64}},line:30}},branchMap:{"0":{loc:{start:{line:19,column:4},end:{line:19,column:86}},type:"if",locations:[{start:{line:19,column:4},end:{line:19,column:86}},{start:{line:19,column:4},end:{line:19,column:86}}],line:19},"1":{loc:{start:{line:23,column:4},end:{line:23,column:94}},type:"if",locations:[{start:{line:23,column:4},end:{line:23,column:94}},{start:{line:23,column:4},end:{line:23,column:94}}],line:23},"2":{loc:{start:{line:28,column:8},end:{line:28,column:74}},type:"if",locations:[{start:{line:28,column:8},end:{line:28,column:74}},{start:{line:28,column:8},end:{line:28,column:74}}],line:28},"3":{loc:{start:{line:31,column:8},end:{line:31,column:87}},type:"if",locations:[{start:{line:31,column:8},end:{line:31,column:87}},{start:{line:31,column:8},end:{line:31,column:87}}],line:31}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"964619c9f768b64a32328925ebf788bb9799cab2"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{validate,errors:{NotFoundError}}=(cov_1p4x9m6xt1.s[0]++,require('wishare-util'));const{ObjectId,models:{User}}=(cov_1p4x9m6xt1.s[1]++,require('wishare-data'));const fs=(cov_1p4x9m6xt1.s[2]++,require('fs'));const path=(cov_1p4x9m6xt1.s[3]++,require('path'));/**
 * Deletes the indicated wish of the user
 * 
 * @param {ObjectId} id of user
 * @param {ObjectId} wishId wish id
 * 
 * @returns {Promise} 
 */cov_1p4x9m6xt1.s[4]++;module.exports=function(id,wishId){cov_1p4x9m6xt1.f[0]++;cov_1p4x9m6xt1.s[5]++;validate.string(id);cov_1p4x9m6xt1.s[6]++;validate.string.notVoid('id',id);cov_1p4x9m6xt1.s[7]++;if(!ObjectId.isValid(id)){cov_1p4x9m6xt1.b[0][0]++;cov_1p4x9m6xt1.s[8]++;throw new NotFoundError(`user with id ${id} not found`);}else{cov_1p4x9m6xt1.b[0][1]++;}cov_1p4x9m6xt1.s[9]++;validate.string(wishId);cov_1p4x9m6xt1.s[10]++;validate.string.notVoid('wishId',wishId);cov_1p4x9m6xt1.s[11]++;if(!ObjectId.isValid(wishId)){cov_1p4x9m6xt1.b[1][0]++;cov_1p4x9m6xt1.s[12]++;throw new NotFoundError(`wish with id ${wishId} not found`);}else{cov_1p4x9m6xt1.b[1][1]++;}cov_1p4x9m6xt1.s[13]++;return(async()=>{cov_1p4x9m6xt1.f[1]++;const user=(cov_1p4x9m6xt1.s[14]++,await User.findById(id));cov_1p4x9m6xt1.s[15]++;if(!user){cov_1p4x9m6xt1.b[2][0]++;cov_1p4x9m6xt1.s[16]++;throw new NotFoundError(`user with id ${id} not found`);}else{cov_1p4x9m6xt1.b[2][1]++;}const wish=(cov_1p4x9m6xt1.s[17]++,user.wishes.find(wish=>{cov_1p4x9m6xt1.f[2]++;cov_1p4x9m6xt1.s[18]++;return wish.id===wishId;}));cov_1p4x9m6xt1.s[19]++;if(!wish){cov_1p4x9m6xt1.b[3][0]++;cov_1p4x9m6xt1.s[20]++;throw new NotFoundError(`user does not have wish with id ${wishId}`);}else{cov_1p4x9m6xt1.b[3][1]++;}// const file = path.join(__dirname, `../../data/users/${id}/wishes/${wishId}.png`)
// fs.unlinkSync(file) 
cov_1p4x9m6xt1.s[21]++;await User.updateOne({_id:ObjectId(id)},{$pull:{wishes:{_id:ObjectId(wishId)}}});})();};