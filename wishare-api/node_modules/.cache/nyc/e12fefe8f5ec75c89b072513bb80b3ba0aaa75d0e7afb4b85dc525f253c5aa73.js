var cov_18adain8xs=function(){var path="/home/marta/bootcamp/collab/skylab-bootcamp-201909/staff/marta-penya/wishare/wishare-api/logic/delete-friend/index.js";var hash="39cde5e61114371e4b672afac1dd7358c92fc268";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/marta/bootcamp/collab/skylab-bootcamp-201909/staff/marta-penya/wishare/wishare-api/logic/delete-friend/index.js",statementMap:{"0":{start:{line:1,column:45},end:{line:1,column:68}},"1":{start:{line:2,column:64},end:{line:2,column:87}},"2":{start:{line:12,column:0},end:{line:48,column:1}},"3":{start:{line:13,column:4},end:{line:13,column:23}},"4":{start:{line:14,column:4},end:{line:14,column:37}},"5":{start:{line:15,column:4},end:{line:15,column:80}},"6":{start:{line:15,column:31},end:{line:15,column:80}},"7":{start:{line:17,column:4},end:{line:17,column:29}},"8":{start:{line:18,column:4},end:{line:18,column:49}},"9":{start:{line:19,column:4},end:{line:19,column:92}},"10":{start:{line:19,column:37},end:{line:19,column:92}},"11":{start:{line:21,column:4},end:{line:47,column:8}},"12":{start:{line:23,column:21},end:{line:23,column:44}},"13":{start:{line:24,column:8},end:{line:24,column:74}},"14":{start:{line:24,column:19},end:{line:24,column:74}},"15":{start:{line:27,column:23},end:{line:27,column:64}},"16":{start:{line:29,column:8},end:{line:29,column:83}},"17":{start:{line:29,column:20},end:{line:29,column:83}},"18":{start:{line:31,column:24},end:{line:31,column:36}},"19":{start:{line:33,column:29},end:{line:33,column:64}},"20":{start:{line:35,column:8},end:{line:35,column:39}},"21":{start:{line:37,column:8},end:{line:37,column:25}},"22":{start:{line:39,column:21},end:{line:39,column:64}},"23":{start:{line:41,column:33},end:{line:41,column:71}},"24":{start:{line:43,column:8},end:{line:43,column:46}},"25":{start:{line:45,column:8},end:{line:45,column:25}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:12,column:17},end:{line:12,column:18}},loc:{start:{line:12,column:35},end:{line:48,column:1}},line:12},"1":{name:"(anonymous_1)",decl:{start:{line:21,column:13},end:{line:21,column:14}},loc:{start:{line:21,column:24},end:{line:47,column:5}},line:21}},branchMap:{"0":{loc:{start:{line:15,column:4},end:{line:15,column:80}},type:"if",locations:[{start:{line:15,column:4},end:{line:15,column:80}},{start:{line:15,column:4},end:{line:15,column:80}}],line:15},"1":{loc:{start:{line:19,column:4},end:{line:19,column:92}},type:"if",locations:[{start:{line:19,column:4},end:{line:19,column:92}},{start:{line:19,column:4},end:{line:19,column:92}}],line:19},"2":{loc:{start:{line:24,column:8},end:{line:24,column:74}},type:"if",locations:[{start:{line:24,column:8},end:{line:24,column:74}},{start:{line:24,column:8},end:{line:24,column:74}}],line:24},"3":{loc:{start:{line:29,column:8},end:{line:29,column:83}},type:"if",locations:[{start:{line:29,column:8},end:{line:29,column:83}},{start:{line:29,column:8},end:{line:29,column:83}}],line:29}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"39cde5e61114371e4b672afac1dd7358c92fc268"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{ObjectId,models:{User,Chat}}=(cov_18adain8xs.s[0]++,require('wishare-data'));const{validate,errors:{ContentError,NotFoundError}}=(cov_18adain8xs.s[1]++,require('wishare-util'));/**
 * Removes a friend from the friend list of the user
 * 
 * @param {string} id of user
 * @param {string} friendId id of the user friend 
 * 
 */cov_18adain8xs.s[2]++;module.exports=(id,friendId)=>{cov_18adain8xs.f[0]++;cov_18adain8xs.s[3]++;validate.string(id);cov_18adain8xs.s[4]++;validate.string.notVoid('id',id);cov_18adain8xs.s[5]++;if(!ObjectId.isValid(id)){cov_18adain8xs.b[0][0]++;cov_18adain8xs.s[6]++;throw new ContentError(`${id} is not a valid id`);}else{cov_18adain8xs.b[0][1]++;}cov_18adain8xs.s[7]++;validate.string(friendId);cov_18adain8xs.s[8]++;validate.string.notVoid('friendId',friendId);cov_18adain8xs.s[9]++;if(!ObjectId.isValid(friendId)){cov_18adain8xs.b[1][0]++;cov_18adain8xs.s[10]++;throw new ContentError(`${friendId} is not a valid id`);}else{cov_18adain8xs.b[1][1]++;}cov_18adain8xs.s[11]++;return(async()=>{cov_18adain8xs.f[1]++;const user=(cov_18adain8xs.s[12]++,await User.findById(id));cov_18adain8xs.s[13]++;if(!user){cov_18adain8xs.b[2][0]++;cov_18adain8xs.s[14]++;throw new NotFoundError(`user with id ${id} not found`);}else{cov_18adain8xs.b[2][1]++;}const friend=(cov_18adain8xs.s[15]++,user.friends.includes(ObjectId(friendId)));cov_18adain8xs.s[16]++;if(!friend){cov_18adain8xs.b[3][0]++;cov_18adain8xs.s[17]++;throw new NotFoundError(`friend with id ${friendId} not found`);}else{cov_18adain8xs.b[3][1]++;}const friends=(cov_18adain8xs.s[18]++,user.friends);const friendRemove=(cov_18adain8xs.s[19]++,friends.indexOf(ObjectId(friendId)));cov_18adain8xs.s[20]++;friends.splice(friendRemove,1);cov_18adain8xs.s[21]++;await user.save();const chat=(cov_18adain8xs.s[22]++,await Chat.findOne({owner:ObjectId(id)}));const friendChatRemove=(cov_18adain8xs.s[23]++,chat.users.indexOf(ObjectId(friendId)));cov_18adain8xs.s[24]++;chat.users.splice(friendChatRemove,1);cov_18adain8xs.s[25]++;await chat.save();})();};