var cov_191petovkg=function(){var path="/home/marta/bootcamp/collab/skylab-bootcamp-201909/staff/marta-penya/wishare/wishare-api/logic/retrieve-user/index.spec.js";var hash="92316e1be20d7bb98ce41df0985a993fec784092";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/marta/bootcamp/collab/skylab-bootcamp-201909/staff/marta-penya/wishare/wishare-api/logic/retrieve-user/index.spec.js",statementMap:{"0":{start:{line:1,column:0},end:{line:1,column:26}},"1":{start:{line:2,column:33},end:{line:2,column:40}},"2":{start:{line:3,column:19},end:{line:3,column:34}},"3":{start:{line:4,column:19},end:{line:4,column:23}},"4":{start:{line:5,column:21},end:{line:5,column:33}},"5":{start:{line:6,column:52},end:{line:6,column:75}},"6":{start:{line:7,column:39},end:{line:7,column:62}},"7":{start:{line:8,column:15},end:{line:8,column:34}},"8":{start:{line:10,column:0},end:{line:84,column:2}},"9":{start:{line:11,column:4},end:{line:11,column:47}},"10":{start:{line:11,column:17},end:{line:11,column:46}},"11":{start:{line:15,column:4},end:{line:34,column:6}},"12":{start:{line:16,column:8},end:{line:16,column:33}},"13":{start:{line:17,column:8},end:{line:17,column:39}},"14":{start:{line:18,column:8},end:{line:18,column:44}},"15":{start:{line:19,column:8},end:{line:19,column:41}},"16":{start:{line:20,column:8},end:{line:20,column:41}},"17":{start:{line:21,column:8},end:{line:21,column:19}},"18":{start:{line:22,column:8},end:{line:22,column:17}},"19":{start:{line:23,column:8},end:{line:23,column:16}},"20":{start:{line:24,column:8},end:{line:24,column:34}},"21":{start:{line:27,column:8},end:{line:27,column:57}},"22":{start:{line:29,column:8},end:{line:29,column:31}},"23":{start:{line:31,column:21},end:{line:31,column:117}},"24":{start:{line:33,column:8},end:{line:33,column:20}},"25":{start:{line:36,column:4},end:{line:53,column:6}},"26":{start:{line:37,column:21},end:{line:37,column:43}},"27":{start:{line:39,column:8},end:{line:39,column:29}},"28":{start:{line:40,column:8},end:{line:40,column:36}},"29":{start:{line:41,column:8},end:{line:41,column:41}},"30":{start:{line:42,column:8},end:{line:42,column:37}},"31":{start:{line:43,column:8},end:{line:43,column:40}},"32":{start:{line:44,column:8},end:{line:44,column:43}},"33":{start:{line:45,column:8},end:{line:45,column:46}},"34":{start:{line:46,column:8},end:{line:46,column:46}},"35":{start:{line:47,column:8},end:{line:47,column:42}},"36":{start:{line:48,column:8},end:{line:48,column:44}},"37":{start:{line:49,column:8},end:{line:49,column:80}},"38":{start:{line:50,column:8},end:{line:50,column:47}},"39":{start:{line:51,column:8},end:{line:51,column:40}},"40":{start:{line:52,column:8},end:{line:52,column:57}},"41":{start:{line:55,column:4},end:{line:67,column:6}},"42":{start:{line:56,column:19},end:{line:56,column:45}},"43":{start:{line:58,column:8},end:{line:66,column:9}},"44":{start:{line:59,column:12},end:{line:59,column:34}},"45":{start:{line:61,column:12},end:{line:61,column:54}},"46":{start:{line:63,column:12},end:{line:63,column:34}},"47":{start:{line:64,column:12},end:{line:64,column:60}},"48":{start:{line:65,column:12},end:{line:65,column:74}},"49":{start:{line:68,column:4},end:{line:81,column:7}},"50":{start:{line:69,column:24},end:{line:69,column:34}},"51":{start:{line:70,column:8},end:{line:70,column:78}},"52":{start:{line:70,column:21},end:{line:70,column:36}},"53":{start:{line:71,column:8},end:{line:71,column:84}},"54":{start:{line:71,column:21},end:{line:71,column:39}},"55":{start:{line:72,column:8},end:{line:72,column:78}},"56":{start:{line:72,column:21},end:{line:72,column:37}},"57":{start:{line:73,column:8},end:{line:73,column:93}},"58":{start:{line:73,column:21},end:{line:73,column:37}},"59":{start:{line:74,column:8},end:{line:74,column:94}},"60":{start:{line:74,column:21},end:{line:74,column:44}},"61":{start:{line:75,column:8},end:{line:75,column:84}},"62":{start:{line:75,column:21},end:{line:75,column:39}},"63":{start:{line:77,column:8},end:{line:77,column:85}},"64":{start:{line:77,column:21},end:{line:77,column:37}},"65":{start:{line:78,column:8},end:{line:78,column:90}},"66":{start:{line:78,column:21},end:{line:78,column:42}},"67":{start:{line:79,column:8},end:{line:79,column:99}},"68":{start:{line:79,column:21},end:{line:79,column:42}},"69":{start:{line:83,column:4},end:{line:83,column:60}},"70":{start:{line:83,column:16},end:{line:83,column:59}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:10,column:34},end:{line:10,column:35}},loc:{start:{line:10,column:40},end:{line:84,column:1}},line:10},"1":{name:"(anonymous_1)",decl:{start:{line:11,column:11},end:{line:11,column:12}},loc:{start:{line:11,column:17},end:{line:11,column:46}},line:11},"2":{name:"(anonymous_2)",decl:{start:{line:15,column:15},end:{line:15,column:16}},loc:{start:{line:15,column:27},end:{line:34,column:5}},line:15},"3":{name:"(anonymous_3)",decl:{start:{line:36,column:44},end:{line:36,column:45}},loc:{start:{line:36,column:56},end:{line:53,column:5}},line:36},"4":{name:"(anonymous_4)",decl:{start:{line:55,column:39},end:{line:55,column:40}},loc:{start:{line:55,column:51},end:{line:67,column:5}},line:55},"5":{name:"(anonymous_5)",decl:{start:{line:68,column:43},end:{line:68,column:44}},loc:{start:{line:68,column:49},end:{line:81,column:6}},line:68},"6":{name:"(anonymous_6)",decl:{start:{line:70,column:15},end:{line:70,column:16}},loc:{start:{line:70,column:21},end:{line:70,column:36}},line:70},"7":{name:"(anonymous_7)",decl:{start:{line:71,column:15},end:{line:71,column:16}},loc:{start:{line:71,column:21},end:{line:71,column:39}},line:71},"8":{name:"(anonymous_8)",decl:{start:{line:72,column:15},end:{line:72,column:16}},loc:{start:{line:72,column:21},end:{line:72,column:37}},line:72},"9":{name:"(anonymous_9)",decl:{start:{line:73,column:15},end:{line:73,column:16}},loc:{start:{line:73,column:21},end:{line:73,column:37}},line:73},"10":{name:"(anonymous_10)",decl:{start:{line:74,column:15},end:{line:74,column:16}},loc:{start:{line:74,column:21},end:{line:74,column:44}},line:74},"11":{name:"(anonymous_11)",decl:{start:{line:75,column:15},end:{line:75,column:16}},loc:{start:{line:75,column:21},end:{line:75,column:39}},line:75},"12":{name:"(anonymous_12)",decl:{start:{line:77,column:15},end:{line:77,column:16}},loc:{start:{line:77,column:21},end:{line:77,column:37}},line:77},"13":{name:"(anonymous_13)",decl:{start:{line:78,column:15},end:{line:78,column:16}},loc:{start:{line:78,column:21},end:{line:78,column:42}},line:78},"14":{name:"(anonymous_14)",decl:{start:{line:79,column:15},end:{line:79,column:16}},loc:{start:{line:79,column:21},end:{line:79,column:42}},line:79},"15":{name:"(anonymous_15)",decl:{start:{line:83,column:10},end:{line:83,column:11}},loc:{start:{line:83,column:16},end:{line:83,column:59}},line:83}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"92316e1be20d7bb98ce41df0985a993fec784092"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_191petovkg.s[0]++;require('dotenv').config();const{env:{TEST_DB_URL}}=(cov_191petovkg.s[1]++,process);const{expect}=(cov_191petovkg.s[2]++,require('chai'));const{random}=(cov_191petovkg.s[3]++,Math);const retrieveUser=(cov_191petovkg.s[4]++,require('.'));const{errors:{NotFoundError,ContentError}}=(cov_191petovkg.s[5]++,require('wishare-util'));const{database,models:{User}}=(cov_191petovkg.s[6]++,require('wishare-data'));const bcrypt=(cov_191petovkg.s[7]++,require('bcryptjs'));cov_191petovkg.s[8]++;describe('logic - retrieve user',()=>{cov_191petovkg.f[0]++;cov_191petovkg.s[9]++;before(()=>{cov_191petovkg.f[1]++;cov_191petovkg.s[10]++;return database.connect(TEST_DB_URL);});let id,name,surname,email,year,month,day,birthday,password;cov_191petovkg.s[11]++;beforeEach(async()=>{cov_191petovkg.f[2]++;cov_191petovkg.s[12]++;name=`name-${random()}`;cov_191petovkg.s[13]++;surname=`surname-${random()}`;cov_191petovkg.s[14]++;email=`email-${random()}@mail.com`;cov_191petovkg.s[15]++;username=`username-${random()}`;cov_191petovkg.s[16]++;password=`password-${random()}`;cov_191petovkg.s[17]++;year=1999;cov_191petovkg.s[18]++;month=1;cov_191petovkg.s[19]++;day=25;cov_191petovkg.s[20]++;passwordconfirm=password;cov_191petovkg.s[21]++;birthday=new Date(year,month-1,day,2,0,0,0);cov_191petovkg.s[22]++;await User.deleteMany();const user=(cov_191petovkg.s[23]++,await User.create({name,surname,email,birthday,password:await bcrypt.hash(password,10)}));cov_191petovkg.s[24]++;id=user.id;});cov_191petovkg.s[25]++;it('should succeed on correct user id',async()=>{cov_191petovkg.f[3]++;const user=(cov_191petovkg.s[26]++,await retrieveUser(id));cov_191petovkg.s[27]++;expect(user).to.exist;cov_191petovkg.s[28]++;expect(user.id).to.equal(id);cov_191petovkg.s[29]++;expect(user.id).to.be.a('string');cov_191petovkg.s[30]++;expect(user._id).to.not.exist;cov_191petovkg.s[31]++;expect(user.name).to.equal(name);cov_191petovkg.s[32]++;expect(user.name).to.be.a('string');cov_191petovkg.s[33]++;expect(user.surname).to.equal(surname);cov_191petovkg.s[34]++;expect(user.surname).to.be.a('string');cov_191petovkg.s[35]++;expect(user.email).to.equal(email);cov_191petovkg.s[36]++;expect(user.email).to.be.a('string');cov_191petovkg.s[37]++;expect(user.birthday.toString()).to.equal(birthday.toLocaleDateString());cov_191petovkg.s[38]++;expect(user.birthday).to.be.a('string');cov_191petovkg.s[39]++;expect(user.lastAccess).to.exist;cov_191petovkg.s[40]++;expect(user.lastAccess).to.be.an.instanceOf(Date);});cov_191petovkg.s[41]++;it('should fail on wrong user id',async()=>{cov_191petovkg.f[4]++;const id=(cov_191petovkg.s[42]++,'012345678901234567890123');cov_191petovkg.s[43]++;try{cov_191petovkg.s[44]++;await retrieveUser(id);cov_191petovkg.s[45]++;throw Error('should not reach this point');}catch(error){cov_191petovkg.s[46]++;expect(error).to.exist;cov_191petovkg.s[47]++;expect(error).to.be.an.instanceOf(NotFoundError);cov_191petovkg.s[48]++;expect(error.message).to.equal(`user with id ${id} not found`);}});cov_191petovkg.s[49]++;it('should fail on incorrect id data',()=>{cov_191petovkg.f[5]++;const wrongId=(cov_191petovkg.s[50]++,'wrong id');cov_191petovkg.s[51]++;expect(()=>{cov_191petovkg.f[6]++;cov_191petovkg.s[52]++;return retrieveUser(1);}).to.throw(TypeError,'1 is not a string');cov_191petovkg.s[53]++;expect(()=>{cov_191petovkg.f[7]++;cov_191petovkg.s[54]++;return retrieveUser(true);}).to.throw(TypeError,'true is not a string');cov_191petovkg.s[55]++;expect(()=>{cov_191petovkg.f[8]++;cov_191petovkg.s[56]++;return retrieveUser([]);}).to.throw(TypeError,' is not a string');cov_191petovkg.s[57]++;expect(()=>{cov_191petovkg.f[9]++;cov_191petovkg.s[58]++;return retrieveUser({});}).to.throw(TypeError,'[object Object] is not a string');cov_191petovkg.s[59]++;expect(()=>{cov_191petovkg.f[10]++;cov_191petovkg.s[60]++;return retrieveUser(undefined);}).to.throw(TypeError,'undefined is not a string');cov_191petovkg.s[61]++;expect(()=>{cov_191petovkg.f[11]++;cov_191petovkg.s[62]++;return retrieveUser(null);}).to.throw(TypeError,'null is not a string');cov_191petovkg.s[63]++;expect(()=>{cov_191petovkg.f[12]++;cov_191petovkg.s[64]++;return retrieveUser('');}).to.throw(ContentError,'id is empty or blank');cov_191petovkg.s[65]++;expect(()=>{cov_191petovkg.f[13]++;cov_191petovkg.s[66]++;return retrieveUser(' \t\r');}).to.throw(ContentError,'id is empty or blank');cov_191petovkg.s[67]++;expect(()=>{cov_191petovkg.f[14]++;cov_191petovkg.s[68]++;return retrieveUser(wrongId);}).to.throw(ContentError,`${wrongId} is not a valid id`);});cov_191petovkg.s[69]++;after(()=>{cov_191petovkg.f[15]++;cov_191petovkg.s[70]++;return User.deleteMany().then(database.disconnect);});});