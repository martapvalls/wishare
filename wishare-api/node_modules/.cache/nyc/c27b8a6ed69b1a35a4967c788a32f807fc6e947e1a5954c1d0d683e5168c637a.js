var cov_99xpxfcef=function(){var path="/home/marta/bootcamp/collab/skylab-bootcamp-201909/staff/marta-penya/wishare/wishare-api/logic/save-friend-wish/index.js";var hash="ed8df661e27bf8e603d202684798a789a5810b82";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/marta/bootcamp/collab/skylab-bootcamp-201909/staff/marta-penya/wishare/wishare-api/logic/save-friend-wish/index.js",statementMap:{"0":{start:{line:1,column:39},end:{line:1,column:62}},"1":{start:{line:2,column:79},end:{line:2,column:102}},"2":{start:{line:13,column:0},end:{line:48,column:1}},"3":{start:{line:14,column:4},end:{line:14,column:23}},"4":{start:{line:15,column:4},end:{line:15,column:37}},"5":{start:{line:16,column:4},end:{line:16,column:80}},"6":{start:{line:16,column:31},end:{line:16,column:80}},"7":{start:{line:18,column:4},end:{line:18,column:29}},"8":{start:{line:19,column:4},end:{line:19,column:49}},"9":{start:{line:20,column:4},end:{line:20,column:92}},"10":{start:{line:20,column:37},end:{line:20,column:92}},"11":{start:{line:22,column:4},end:{line:22,column:27}},"12":{start:{line:23,column:4},end:{line:23,column:45}},"13":{start:{line:24,column:4},end:{line:24,column:88}},"14":{start:{line:24,column:35},end:{line:24,column:88}},"15":{start:{line:26,column:4},end:{line:47,column:8}},"16":{start:{line:28,column:21},end:{line:28,column:44}},"17":{start:{line:29,column:8},end:{line:29,column:74}},"18":{start:{line:29,column:19},end:{line:29,column:74}},"19":{start:{line:31,column:23},end:{line:31,column:52}},"20":{start:{line:33,column:8},end:{line:33,column:85}},"21":{start:{line:33,column:20},end:{line:33,column:85}},"22":{start:{line:35,column:21},end:{line:35,column:67}},"23":{start:{line:35,column:48},end:{line:35,column:66}},"24":{start:{line:36,column:8},end:{line:36,column:89}},"25":{start:{line:36,column:19},end:{line:36,column:89}},"26":{start:{line:38,column:25},end:{line:38,column:87}},"27":{start:{line:38,column:55},end:{line:38,column:86}},"28":{start:{line:40,column:8},end:{line:40,column:85}},"29":{start:{line:40,column:22},end:{line:40,column:85}},"30":{start:{line:42,column:8},end:{line:42,column:53}},"31":{start:{line:45,column:8},end:{line:45,column:25}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:13,column:17},end:{line:13,column:18}},loc:{start:{line:13,column:43},end:{line:48,column:1}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:26,column:13},end:{line:26,column:14}},loc:{start:{line:26,column:24},end:{line:47,column:5}},line:26},"2":{name:"(anonymous_2)",decl:{start:{line:35,column:40},end:{line:35,column:41}},loc:{start:{line:35,column:48},end:{line:35,column:66}},line:35},"3":{name:"(anonymous_3)",decl:{start:{line:38,column:47},end:{line:38,column:48}},loc:{start:{line:38,column:55},end:{line:38,column:86}},line:38}},branchMap:{"0":{loc:{start:{line:16,column:4},end:{line:16,column:80}},type:"if",locations:[{start:{line:16,column:4},end:{line:16,column:80}},{start:{line:16,column:4},end:{line:16,column:80}}],line:16},"1":{loc:{start:{line:20,column:4},end:{line:20,column:92}},type:"if",locations:[{start:{line:20,column:4},end:{line:20,column:92}},{start:{line:20,column:4},end:{line:20,column:92}}],line:20},"2":{loc:{start:{line:24,column:4},end:{line:24,column:88}},type:"if",locations:[{start:{line:24,column:4},end:{line:24,column:88}},{start:{line:24,column:4},end:{line:24,column:88}}],line:24},"3":{loc:{start:{line:29,column:8},end:{line:29,column:74}},type:"if",locations:[{start:{line:29,column:8},end:{line:29,column:74}},{start:{line:29,column:8},end:{line:29,column:74}}],line:29},"4":{loc:{start:{line:33,column:8},end:{line:33,column:85}},type:"if",locations:[{start:{line:33,column:8},end:{line:33,column:85}},{start:{line:33,column:8},end:{line:33,column:85}}],line:33},"5":{loc:{start:{line:36,column:8},end:{line:36,column:89}},type:"if",locations:[{start:{line:36,column:8},end:{line:36,column:89}},{start:{line:36,column:8},end:{line:36,column:89}}],line:36},"6":{loc:{start:{line:40,column:8},end:{line:40,column:85}},type:"if",locations:[{start:{line:40,column:8},end:{line:40,column:85}},{start:{line:40,column:8},end:{line:40,column:85}}],line:40}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"ed8df661e27bf8e603d202684798a789a5810b82"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{ObjectId,models:{User}}=(cov_99xpxfcef.s[0]++,require('wishare-data'));const{validate,errors:{ContentError,NotFoundError,ConflictError}}=(cov_99xpxfcef.s[1]++,require('wishare-util'));/**
 * Saves a wish from a friend in a user saved wishes list
 * 
 * @param {ObjectId} id of user
 * @param {ObjectId} friendId of user friend 
 * @param {ObjectId} wishId of user friend wish
 * 
 */cov_99xpxfcef.s[2]++;module.exports=(id,friendId,wishId)=>{cov_99xpxfcef.f[0]++;cov_99xpxfcef.s[3]++;validate.string(id);cov_99xpxfcef.s[4]++;validate.string.notVoid('id',id);cov_99xpxfcef.s[5]++;if(!ObjectId.isValid(id)){cov_99xpxfcef.b[0][0]++;cov_99xpxfcef.s[6]++;throw new ContentError(`${id} is not a valid id`);}else{cov_99xpxfcef.b[0][1]++;}cov_99xpxfcef.s[7]++;validate.string(friendId);cov_99xpxfcef.s[8]++;validate.string.notVoid('friendId',friendId);cov_99xpxfcef.s[9]++;if(!ObjectId.isValid(friendId)){cov_99xpxfcef.b[1][0]++;cov_99xpxfcef.s[10]++;throw new ContentError(`${friendId} is not a valid id`);}else{cov_99xpxfcef.b[1][1]++;}cov_99xpxfcef.s[11]++;validate.string(wishId);cov_99xpxfcef.s[12]++;validate.string.notVoid('wishId',wishId);cov_99xpxfcef.s[13]++;if(!ObjectId.isValid(wishId)){cov_99xpxfcef.b[2][0]++;cov_99xpxfcef.s[14]++;throw new ContentError(`${wishId} is not a valid id`);}else{cov_99xpxfcef.b[2][1]++;}cov_99xpxfcef.s[15]++;return(async()=>{cov_99xpxfcef.f[1]++;const user=(cov_99xpxfcef.s[16]++,await User.findById(id));cov_99xpxfcef.s[17]++;if(!user){cov_99xpxfcef.b[3][0]++;cov_99xpxfcef.s[18]++;throw new NotFoundError(`user with id ${id} not found`);}else{cov_99xpxfcef.b[3][1]++;}const friend=(cov_99xpxfcef.s[19]++,await User.findById(friendId));cov_99xpxfcef.s[20]++;if(!friend){cov_99xpxfcef.b[4][0]++;cov_99xpxfcef.s[21]++;throw new NotFoundError(`there is no friend with id ${friendId}`);}else{cov_99xpxfcef.b[4][1]++;}const wish=(cov_99xpxfcef.s[22]++,friend.wishes.find(wish=>{cov_99xpxfcef.f[2]++;cov_99xpxfcef.s[23]++;return wish.id===wishId;}));cov_99xpxfcef.s[24]++;if(!wish){cov_99xpxfcef.b[5][0]++;cov_99xpxfcef.s[25]++;throw new NotFoundError(`friend does not have wish with id ${wishId}`);}else{cov_99xpxfcef.b[5][1]++;}const savewish=(cov_99xpxfcef.s[26]++,user.savedWishes.find(wish=>{cov_99xpxfcef.f[3]++;cov_99xpxfcef.s[27]++;return wish.wish.toString()===wishId;}));cov_99xpxfcef.s[28]++;if(savewish){cov_99xpxfcef.b[6][0]++;cov_99xpxfcef.s[29]++;throw new ConflictError(`already saved wish with id ${wishId}`);}else{cov_99xpxfcef.b[6][1]++;}cov_99xpxfcef.s[30]++;user.savedWishes.push({user:friendId,wish});cov_99xpxfcef.s[31]++;await user.save();})();};